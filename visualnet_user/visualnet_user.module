<?php

/**
 * @file
 * Make the login screens better :).
 */

use \Drupal\Core\Form\FormStateInterface;
use \Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function visualnet_user_help($path, $arg)
{
  switch ($path) {
    case 'help.page.visualnet_user':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Better Login module is used to remove issue of styling Drupal login/password/registration forms. It is slightly inspired by the way Wordpress login forms work, and uses three page templates to change the style of the forms. It is very simple to use, just install the Better Login module and
it starts working immediately.') . '</p>';
      $output .= '<p>' . t('For more information, see the <a href="https://www.drupal.org/project/visualnet_user">visualnet_user module</a>.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<p>' . t('This module uses four templates:') . '</p>';
      $output .= '<ul>';
      $output .= '<li>' . t('page--user--login.tpl.php') . '</li>';
      $output .= '<li>' . t('page--user--password.tpl.php') . '</li>';
      $output .= '<li>' . t('page--user--register.tpl.php') . '</li>';
      $output .= '<li>' . t('page--user--reset.tpl.php') . '</li>';
      $output .= '</ul>';
      $output .= '<p>' . t('These sit in the /templates directory in the module. You can override them by copying the templates out of the module and into your theme directory.') . '</p>';
      $output .= '<p>' . t('Alternatively if you are happy with the templates you can easily just alter the CSS styles in your theme.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_form_alter().
 *
 * Autofocus on the username field.
 * Some proper page titles would be nice for a change,
 * User account is a bit boring..
 */
function visualnet_user_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  if($form['#form_id'] == 'user_pass') {
    $form['actions']['submit']['#submit'][] = '::submitForm';
    $form['actions']['submit']['#submit'][] = 'user_pass_redirect';
  }

  // Autofocus on the username field.
  // And add some pretty CSS :).
  // And a few other things too...
  if ($form_id == 'user_login_form' || $form_id == 'user_register_form' || $form_id == 'user_pass' || $form_id == 'user_pass_reset') {
    $form['name']['#attributes']['autofocus'] = 'autofocus';
    unset($form['name']['#description']);
    unset($form['pass']['#description']);
    unset($form['user_picture']);
    unset($form['contact']);

    // Add in some CSS.
    $form['#attached']['library'][] = 'visualnet_user/visualnet_user_css';
  }

  // Exit if we're not on a target url, since the form may have been rendered
  // programmatically. We don't want to change page titles on other pages.
  $pages = array('login', 'register', 'password', 'reset');
  // Retrieve an array which contains the path pieces.
  $current_path = \Drupal::service('path.current')->getPath();
  $path_args = explode('/', $current_path);
  if (!in_array($path_args, $pages)) {
    return;
  }
}

function user_pass_redirect(&$form, $form_state) {
  $form_state->setRedirectUrl(Url::fromRoute('visualnet_user.login'));
}

/**
 * Implements hook_preprocess_page().
 */
function visualnet_user_preprocess_page(&$variables)
{
  $variables['site_name'] = \Drupal::config('system.site')->get('name');
  $variables['logo'] = theme_get_setting('logo.url');
  $current_path = \Drupal::service('path.current')->getPath();
  switch ($current_path) {
    case '/user/login':
      $variables['title'] = t('Login');
      break;

    case '/user/password':
      $variables['title'] = t('Forgot your password?');
      break;

    case '/user/register':
      $variables['title'] = t('Register');
      break;

    case '/user/reset':
      $variables['title'] = t('Reset password');
      break;
  }

  $variables['#cache']['contexts'][] = 'route';
  $variables['page']['#cache']['contexts'][] = 'route';
  $variables['page']['content']['bartik_local_tasks'] = array();
  $variables['page']['content']['bartik_page_title'] = array();
}

/**
 * Implements hook_preprocess_html().
 */
function visualnet_user_preprocess_html(&$variables)
{
  $current_path = \Drupal::service('path.current')->getPath();
  switch ($current_path) {
    case '/user/login':
      $variables['head_title']['title'] = t('Login');
      break;

    case '/user/password':
      $variables['head_title']['title'] = t('Forgot your password?');
      break;

    case '/user/register':
      $variables['head_title']['title'] = t('Register');
      break;

    case '/user/reset':
      $variables['head_title']['title'] = t('Reset password');
      break;
  }

  $variables['#cache']['contexts'][] = 'route';
  $variables['page']['#cache']['contexts'][] = 'route';
}

function visualnet_user_user_login($account)
{
  $response = new RedirectResponse('/user/me');
  $response->send();
  exit();
}

/**
 * Implements hook_theme()
 * @return mixed
 */
function visualnet_user_theme() {

  $theme['me'] = [
    'variables' => ['data' => NULL, 'form' => NULL],
    'template' => 'me',
  ];

  $theme['pass'] = [
    'variables' => ['data' => NULL, 'form' => NULL],
    'template' => 'pass',
  ];

  $theme['register'] = [
    'variables' => ['data' => NULL, 'form' => NULL],
    'template' => 'register',
  ];

  $theme['login'] = [
    'variables' => ['data' => NULL, 'form' => NULL],
    'template' => 'login',
  ];

  $theme['activate'] = [
    'variables' => ['data' => NULL, 'form' => NULL],
    'template' => 'activate',
  ];

  $theme['ticket_base'] = [
    'variables' => ['data' => NULL, 'form' => NULL, 'previous_count' => NULL],
    'template' => 'ticket/base',
  ];

  $theme['order'] = [
    'variables' => ['data' => NULL, 'form' => NULL],
    'template' => 'order',
  ];

  $theme['password'] = [
    'variables' => ['data' => NULL, 'form' => NULL],
    'template' => 'password',
  ];

  $theme['remind'] = [
    'variables' => ['data' => NULL, 'form' => NULL],
    'template' => 'remind',
  ];

  return $theme;
}